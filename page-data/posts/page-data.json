{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"f4896346-c110-59f1-b775-7c43840bd969","excerpt":"SRP (Single Responsiblity Principle) - 단일 책임 원칙 하나의 클래스는 하나의 책임만 가져야 한다. 어떤 변화 (요구 사항등의 변화)에 의해서 클래스를 변경해야하는 이유는 오직 하나여야 한다. 나머지 4원칙의 기초가 되는 원칙으로 SRP만 잘 지키면 다른 책임의 변경으로 인한 연쇄 작용을 방지할 수 있다. OCP (Open-Closed Principle) - 개방, 폐쇄 원칙 SW의 구성 요소 (모듈, 컴포넌트, 클래스, 메서드)는 확장에는 열려있고 변경에는 닫쳐있어야 한다. 변경을 위한 비용은 가능한 줄이고, 확장을 위한 비용은 극대화 한다. OCP를 가능하게 하는 중요 매커니즘은 추상화와 다형성이다. 새로운 기능이 추가되는 경우, 기존에 제공하던 클래스 (또는 메서드)를 수정하는 것이 아니라 새로운 클래스 (또는 메서드)를 추가해서 기능을 확장한다. LSP (The Liskov Subsitution Principle) - 리스코프 치환 원칙 서브 …","fields":{"slug":"/cs/solid/"},"frontmatter":{"categories":"CS","title":"객체지향 5대 원칙 SOLID","date":"April 07, 2024"}},"next":null,"previous":null}],"categories":["All","CS"]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}