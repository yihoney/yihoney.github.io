{"componentChunkName":"component---src-templates-blog-template-js","path":"/vs/Redis_mongoDB/","result":{"data":{"cur":{"id":"1fc66c81-a6b9-5c47-9758-c8551c5c0aea","html":"<p>mongoDB에 대해 알아보던 도중 같은 noSQL인 Redis와의 차이는 무엇일지 궁금해 찾아본 내용들을 정리해보고자 한다.</p>\n<p>차이점을 표로 간단히 정리하자면 다음과 같다.</p>\n<table>\n    <tr>\n        <th>구분</th>\n        <th>Redis</th>\n        <th>MongoDB</th>\n    </tr>\n        <tr>\n        <td>저장소</td>\n        <td>메모리 저장</td>\n        <td>디스크 저장</td>\n    </tr>\n    <tr>\n        <td>데이터 구조</td>\n        <td>key-value <br>\n        - key: 문자열 <br>\n        - value: 문자열 및 List, Set, Bitmap, Hash와 같은 여러 데이터 구조\n        </td>\n        <td>BSON(Binary JSON) <br>\n        - 문자열, 부울, 숫자, 배열, 객체, 날짜 등 다양한 데이터 유형 지원\n        </td>\n    </tr>\n    <tr>\n        <td>확장성</td>\n        <td>수평적 확장 (샤딩)</td>\n        <td>수평적 확장 (샤딩), 복제 세트를 이용한 고가용성 제공</td>\n    </tr>\n    <tr>\n        <td>지원 쿼리</td>\n        <td>기본적인 Key-Value 연산 및 데이터 구조별 복잡한 연산 지원</td>\n        <td>다양한 쿼리 연산, 인덱싱, 집계 파이프라인 지원</td>\n    </tr>\n    <tr>\n        <td>데이터 유지</td>\n        <td>주로 캐싱에 사용, 영속성을 위한 RDB/AOF 옵션 제공</td>\n        <td>데이터 영속화</td>\n    </tr>\n    <tr>\n        <td>성능</td>\n        <td>메모리 기반으로 고속의 데이터 처리 가능</td>\n        <td>메모리 매핑을 이용한 빠른 데이터 처리 가능</td>\n    </tr>\n</table>\n<p><strong>mongoDB</strong>는 메모리맵 형태의 파일 엔진 db이기 때문에 <em><strong>메모리에 의존적</strong></em>이라 메모리 크기가 성능을 좌우하며 메모리를 넘어서는 경우 성능이 급격히 저하된다.</p>\n<br>\n<p><strong>참고</strong>\n<a href=\"https://www.mongodb.com/compare/mongodb-vs-redis\">mongoDB 공식 문서 - mongoDB vs Redis</a></p>\n<br>","excerpt":"mongoDB에 대해 알아보던 도중 같은 noSQL인 Redis와의 차이는 무엇일지 궁금해 찾아본 내용들을 정리해보고자 한다. 차이점을 표로 간단히 정리하자면 다음과 같다. mongoDB는 메모리맵 형태의 파일 엔진 db이기 때문에 메모리에 의존적이라 메모리 크기가 성능을 좌우하며 메모리를 넘어서는 경우 성능이 급격히 저하된다. 참고\nmongoDB 공식 문서 - mongoDB vs Redis","frontmatter":{"date":"April 12, 2024","title":"mongoDB vs Redis","categories":"VS","author":"yi","emoji":"🆚"},"fields":{"slug":"/vs/Redis_mongoDB/"}},"next":{"id":"b72bdde9-ac23-5a48-9ef5-a94545156e6d","html":"<h2 id=\"들어가기에-앞서\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\" aria-label=\"들어가기에 앞서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들어가기에 앞서</h2>\n<blockquote>\n<br>\n<p>프로젝트의 <strong>기획 배경</strong>은 다음과 같다.</p>\n<ol>\n<li>\n<p>기존 사이트의 직관적이지 못한 UI</p>\n</li>\n<li>\n<p>가장 인기 있는 영상 파악의 어려움</p>\n</li>\n<li>\n<p>나에게 적합한 지, 역할(직무)별로 적합한 지 알기 어려움</p>\n</li>\n<li>\n<p>대부분이 영어로 되어 있어, 제목 또는 소개를 통해 컨텐츠가 어떤 내용을 내포하는지 알기 어려움</p>\n</li>\n<li>\n<p>컨텐츠 이용 혹은 영상을 들으며 생기는 질문을 실시간으로 대응해줄 수 있는 시스템의 부재</p>\n</li>\n</ol>\n<p>기획 배경을 바탕으로 우리 팀은 직관적인 페이지로 사용자들의 접근성 낮추고, 일회성 학습이 아닌, 동기를 부여하여 사이트를 계속 방문 하게끔 하는 학습 플랫폼을 기획하게 되었다.</p>\n<p>이 목표를 위해 우리 팀은 다음과 같은 <strong>기능</strong>을 제공하기로 하였다.</p>\n<ol>\n<li>현재 내 상황에 맞춘 <code class=\"language-text\">컨텐츠 추천 챗봇</code></li>\n<li>실시간으로 궁금증을 해결할 수 있는 <code class=\"language-text\">QnA 챗봇</code></li>\n<li>강의 검색 시 오타 교정 및 자동완성 기능을 통한 <code class=\"language-text\">간편 강의 검색</code></li>\n<li>QNA, 강의 소개, 서비스 소개 DB를 연동한 RAG 시스템으로 <code class=\"language-text\">구체적이고 정확한 답변 제공</code></li>\n<li>로드맵 및 강의 현황 대시보드 기능으로 <code class=\"language-text\">학습 지속성 향상</code></li>\n</ol>\n <br>\n</blockquote>\n<br>\n<h2 id=\"mongodb를-도입해보자꾸나\" style=\"position:relative;\"><a href=\"#mongodb%EB%A5%BC-%EB%8F%84%EC%9E%85%ED%95%B4%EB%B3%B4%EC%9E%90%EA%BE%B8%EB%82%98\" aria-label=\"mongodb를 도입해보자꾸나 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mongoDB를 도입해보자꾸나</h2>\n<p>우리 서비스는 크롤링 한 강의 데이터와 FAQ 데이터, 사용자가 챗봇 서비스 이용 시 입력했던 채팅 기록 등을 저장해야 했다. 우리팀은 각 도메인마다의 다양한 데이터 성격을 고려해 기존에 사용해본 경험이 있는 MySQL, Redis 외에 추가적으로 mongoDB를 도입하기로 하였다. <br></p>\n<h4> 여기서 mongoDB란? </h4>\n<ul>\n<li>mongoDB란 document 지향적인 데이터베이스이다. document는 아래와 그림과 같이 field와 value 쌍으로 구성된 데이터 구조이다. field의 vaule에는 다른 document나 document 배열 혹은 배열을 저장하는 것도 가능하다.</li>\n<li>mongoDB는 스키마를 고정하지 않은 형태(Schema-less 구조)이다. 이러한 특징으로 필드 추가 및 제거가 간편하고, 분산 확장이 간단하다.</li>\n</ul>\n<p>참고 링크 : <a href=\"https://www.mongodb.com/docs/manual/introduction/#document-database\">mongoDB 공식문서</a> | <a href=\"\">mongoDB vs Redis</a>\n<br></p>\n<p>MongoDB를 도입한 이유는 강의 데이터가 일관적이지 않기 때문이다.\n요약된 정보만 제공하는 강의가 있고, 활동이나 목표 등 추가적인 정보를 제공하는 강의가 존재한다. 어떤 강의는 보유하고 있는 데이터를 다른 특정 강의는 가지고 있지 않을 수 있는데, 이럴 경우 데이터에 대한 관리가 힘들 뿐더러 null 데이터에 대한 여러 검증 작업이 필요할 것이다. 따라서, MongoDB를 도입해 <strong>각 document마다 다른 field를 가지고 있을 수 있도록</strong> 하였다.\n<br></p>\n<!-- 또한, 우리 서비스는 실시간 문의사항 대응과 사용자 맞춤 컨텐츠 추천 서비스를 챗봇으로 제공하기로 했다. 더욱 구체적이고 정확한 답변을 위해 채팅 내역을 영구 보관하고 이를 챗봇에 활용하는데, 이 과정에서 데이터 읽기 작업과 쓰기 작업이 빈번히 일어난다. \n\n참고 링크 : [] -->","frontmatter":{"date":"April 12, 2024","title":"[#1] mongoDB 도입기","categories":"PJT","author":"yi","emoji":"💬"},"fields":{"slug":"/pjt/diary_0412/"}},"prev":{"id":"ff5fe871-fdd8-5c28-9052-2d7905c71eef","html":"<br>\n<blockquote>\n<br>\n<p><strong>목차</strong> <br>\n<a href=\"#mysql\"><code class=\"language-text\">MySQL</code> vs <code class=\"language-text\">MongoDB</code></a> <br>\n<a href=\"#acid-%EB%AA%A8%EB%8D%B8-vs-base-%EB%AA%A8%EB%8D%B8\"><code class=\"language-text\">ACID</code> vs <code class=\"language-text\">BASE</code></a>\n<br></p>\n</blockquote>\n<br>\n<p>기존에 사용하던 RDBMS인 MySQL과 NoSQL인 mongoDB는 어떤 차이가 있는지에 대해 정리해보고자 한다.\n<br></p>\n<h2 id=\"mysql\" style=\"position:relative;\"><a href=\"#mysql\" aria-label=\"mysql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MySQL</h2>\n<ul>\n<li>Oracle Corporation에서 만든 Relational Database Management System 관계형 데이터베이스 관리 시스템(RDBMS)</li>\n<li>데이터베이스 액세스를 위해 structured query language(SQL)을 사용하여 테이블 형태로 데이터를 저장</li>\n<li>데이터에 접근할 때, <code class=\"language-text\">JOIN</code>을 통해 다수의 테이블을 병합</li>\n<li>데이터베이스 스키마를 미리 정의하고, 테이블에서 필드 사이의 관계를 제어하는 규칙을 설정</li>\n<li>ACID 기반의 트랜잭션으로 데이터의 일관성을 보장하고, 복잡한 트랜잭션 처리를 안전하게 수행할 수 있도록 지원</li>\n</ul>\n<br>\n<h2 id=\"mongodb\" style=\"position:relative;\"><a href=\"#mongodb\" aria-label=\"mongodb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MongoDB</h2>\n<ul>\n<li>데이터를 JSON-like documents로 저장하는 NoSQL 데이터베이스</li>\n<li>document는 관계된 정보를 함께 저장하고 <code class=\"language-text\">MQL(MongoDB query language)</code>을 사용하여 접근</li>\n<li>document별로 필드는 다를 수 있으며 document가 self-describing하므로 시스템에 document의 구조를 따로 정의할 필요가 없음</li>\n<li>BASE 기반의 트랜잭션으로 ACID보다 느슨한 일관성 모델을 사용하며, 높은 가용성과 분산 시스템에 적합한 성능 제공</li>\n</ul>\n<br>\n<h3 id=\"acid-모델-vs-base-모델\" style=\"position:relative;\"><a href=\"#acid-%EB%AA%A8%EB%8D%B8-vs-base-%EB%AA%A8%EB%8D%B8\" aria-label=\"acid 모델 vs base 모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ACID 모델 vs Base 모델</h3>\n<table>\n    <tr>\n        <th>속성</th>\n        <th>BASE</th>\n        <th>ACID</th>\n    </tr>\n    <tr>\n        <td>적용 분야</td>\n        <td>NOSQL</td>\n        <td>RDBMS</td>\n    </tr>\n    <tr>\n        <td>일관성 측면</td>\n        <td>약한 일관성</td>\n        <td>강한 일관성</td>\n    </tr>\n    <tr>\n        <td>중점사항</td>\n        <td>Availability</td>\n        <td>‘Commit’에 집중</td>\n    </tr>\n    <tr>\n        <td>시스템 측면</td>\n        <td>성능에 초점</td>\n        <td>엄격한 데이터관리</td>\n    </tr>\n    <tr>\n        <td>효율성</td>\n        <td>쿼리 디자인이 중요</td>\n        <td>테이블 디자인이 중요</td>\n    </tr>\n</table>\n<br>\n<h4>ACID 모델</h4>\n<ul>\n<li>Atomicity(원자성) : 트랜잭션과 관련된 작업들이 모두 수행되었는지 아니면, 모두 실행이 안되었는지를 보장하는 능력</li>\n<li>Consistency(일관성) : 트랜잭션이 실행을 성공적으로 완료하면 언제나 일관성 있는 데이터베이스 상태로 유지하는 것</li>\n<li>Isolation(고립성) : 트랜잭션 수행 시 다른 트랜잭션의 연산 작업이 끼어들지 못하도록 보장하는 것. 즉, 트랜잭션 밖에 있는 어떤 연산도 중간 단계의 데이터를 볼 수 없음을 의미</li>\n<li>Durability (지속성) : DBMS가 사용자에게 트랜잭션 커밋(commit) 응답을 했을 경우, 설사 데이터베이스 객체에 대한 해당 변경 사항이 디스크에 반영(flush) 되기 전에 시스템 장애가 발생하였더라도 해당 트랜잭션의 커밋은 보장 되어야 한다는 속성</li>\n</ul>\n<br>\n<h4>Base 모델</h4>\n<ul>\n<li>Basically Available(기본적인 가용성): 다수의 실패에도 가용성을 보장, 다수의 스토리지에 복사본 저장 (주 서버가 안되더라도 백업 서버는 동작한다)</li>\n<li>Soft state(소프트 상태): 저장소는 쓰기 일관성이 있을 필요가 없으며 서로 다른 복제본이 항상 상호 일관성이 있을 필요도 없음</li>\n<li>Eventual consistency(최종 일관성): 일시적으로 일관성이 깨지는 상태가 되어도 일정시간 후에는 일관성이 있는 상태가 되는 성질</li>\n</ul>\n<br>","frontmatter":{"date":"April 12, 2024","title":"MySQL vs mongoDB","categories":"VS","author":"yi","emoji":"🆚"},"fields":{"slug":"/vs/mysql_mongodb/"}},"site":{"siteMetadata":{"siteUrl":"https://yihoney.github.io","comments":{"utterances":{"repo":"yihoney/yihoney-blog"}}}}},"pageContext":{"slug":"/vs/Redis_mongoDB/","nextSlug":"/pjt/diary_0412/","prevSlug":"/vs/mysql_mongodb/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}